0. for actival vertual environment = Scripts\activate 
1.virtual env: py -m venv "folder name", install django, django-admin startproject "project name"
2.views, url
3.template return: in settings mention 'templates' directory
4.apps: python manage.py startapp "app name", create url file in newly created "app"( later register this app in settings at installed_apps)
5. models: represent tables
6. python manage.py migrate (actual tables created with this command)
python manage.py makemigrations ( create file with name migrations in app but we first create a model(map to table) )
7.  python manage.py createsuperuser (later register model in admin file of article folder)
8. tags (for loop, if logic in html template)
9. static files( url(STATIC_URL) set, file asset(STATICFILES_DIRS) set --- in settings file. first of all keep in url file)
10. extend template (remove head and body, and move to base template and make use by "extends "base template name")
11. urls ( named urls at url path for view function, and for specific app urls keep "app_name" in url file of that app  )
12. media file like static file: here we let know static fun which imported and appended to url in main app, to save  media and access as static file.
13. user management:
a. create app(python manage.py startapp "accounts") and register in settings at installed_apps and then url, view, template create
b. decorater(@login_required)(net ninja explained in python course) = added before view function to check login or not
c. model form( which is help to create form as we have inbuilt forms like login form, here we just import model form from forms file(the file in which we created model form ))
d. we "enctype" attribute in form tag for "upload type input field". otherwise it won't work
e. here we do check with model form for input field validation and all like in login we do with "AuthenticationForm". and extra we need to note is that "media won't come in request.POST it come in request.FILES
F. foreign key linking